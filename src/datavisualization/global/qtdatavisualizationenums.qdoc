/****************************************************************************
**
** Copyright (C) 2013 Digia Plc
** All rights reserved.
** For any questions to Digia, please use contact form at http://qt.digia.com
**
** This file is part of the QtDataVisualization module.
**
** Licensees holding valid Qt Enterprise licenses may use this file in
** accordance with the Qt Enterprise License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.
**
** If you have questions regarding the use of this file, please use
** contact form at http://qt.digia.com
**
****************************************************************************/

/*!
    \namespace QtDataVisualization
    \inmodule QtDataVisualization
    \target QtDataVisualization Enums

    QtDataVisualization namespace holds all the classes and enumerations in the QtDataVisualization
    module.

    \generatelist{classesbymodule QtDataVisualization}
*/

/*!
 * \class QtDataVisualization::QDataVis
 * \inmodule QtDataVisualization
 * \brief Container class for Qt Data Visualization enums.
 * \since Qt Data Visualization 1.0
 *
 * QDataVis acts as a container for Qt Data Visualization enums. It has no other functionality.
 */

/*!
    \enum QtDataVisualization::QDataVis::InputState

    Predefined input states for mouse and touch based input handlers. All states are not valid with all input handlers.

    \value InputStateNone
           Default "no input received" state.
    \value InputStateOnScene
           Mouse or touch input received on the 3D scene.
    \value InputStateOnOverview
           Mouse or touch input received on the overview area.
    \value InputStateOnSlice
           Mouse or touch input received on the slice view area.
    \value InputStateRotating
           Rotation of the 3D geometry ongoing.
    \value InputStateOnPinch
           Pinch/punch multitouch input received.
*/

/*!
    \enum QtDataVisualization::QDataVis::MeshStyle

    Predefined mesh types. All styles are not usable with all visualization types.

    \value MeshStyleBars
           Basic cubic bar. Usable only with Q3DBars.
    \value MeshStylePyramids
           Four-sided pyramid. Usable only with Q3DBars.
    \value MeshStyleCones
           Basic cone. Usable only with Q3DBars.
    \value MeshStyleCylinders
           Basic cylinder. Usable only with Q3DBars.
    \value MeshStyleBevelBars
           Slightly beveled (rounded) cubic bar. Usable only with Q3DBars.
    \value MeshStyleSpheres
           Sphere. Usable only with Q3DScatter.
    \value MeshStyleDots
           Triangular pyramid. Usable only with Q3DScatter.
    \value MeshStylePoints
           2D spots. Usable only with Q3DScatter.
           \b Note: Shadows and color gradients do not affect this style.
*/

/*!
    \enum QtDataVisualization::QDataVis::CameraPreset

    Predefined positions for camera.

    \value CameraPresetNone
           Used to indicate a preset has not been set, or the scene has been rotated freely.
    \value CameraPresetFrontLow
    \value CameraPresetFront
    \value CameraPresetFrontHigh
    \value CameraPresetLeftLow
    \value CameraPresetLeft
    \value CameraPresetLeftHigh
    \value CameraPresetRightLow
    \value CameraPresetRight
    \value CameraPresetRightHigh
    \value CameraPresetBehindLow
    \value CameraPresetBehind
    \value CameraPresetBehindHigh
    \value CameraPresetIsometricLeft
    \value CameraPresetIsometricLeftHigh
    \value CameraPresetIsometricRight
    \value CameraPresetIsometricRightHigh
    \value CameraPresetDirectlyAbove
    \value CameraPresetDirectlyAboveCW45
    \value CameraPresetDirectlyAboveCCW45
    \value CameraPresetFrontBelow
           In Q3DBars from CameraPresetFrontBelow onward these only work for graphs including negative
           values. They act as Preset...Low for positive-only values.
    \value CameraPresetLeftBelow
    \value CameraPresetRightBelow
    \value CameraPresetBehindBelow
    \value CameraPresetDirectlyBelow
           Acts as CameraPresetFrontLow for positive -only bars.
*/

/*!
    \enum QtDataVisualization::QDataVis::Theme

    Predefined themes.

    \value ThemeQt
    \value ThemePrimaryColors
    \value ThemeDigia
    \value ThemeStoneMoss
    \value ThemeArmyBlue
    \value ThemeRetro
    \value ThemeEbony
    \value ThemeIsabelle
    \value ThemeUserDefined
*/

/*!
    \enum QtDataVisualization::QDataVis::SelectionFlag

    Item selection modes. Values of this enumeration can be combined with OR operator.

    \value SelectionNone
           Selection mode disabled.
    \value SelectionItem
           Selection highlights a single item.
    \value SelectionRow
           Selection highlights a single row.
    \value SelectionItemAndRow
           Combination flag for highlighting both item and row with different colors.
    \value SelectionColumn
           Selection highlights a single column.
    \value SelectionItemAndColumn
           Combination flag for highlighting both item and column with different colors.
    \value SelectionRowAndColumn
           Combination flag for highlighting both row and column.
    \value SelectionItemRowAndColumn
           Combination flag for highlighting item, row, and column.
    \value SelectionSlice
           Setting this mode flag indicates that the graph should take care of the slice view handling
           automatically. If you wish to control the slice view yourself via Q3DScene, do not set this
           flag. When setting this mode flag, either \c SelectionRow or \c SelectionColumn must also
           be set, but not both. Slicing is supported by Q3DBars and Q3DSurface only.
    \value SelectionMultiSeries
           Setting this mode means that items for all series at same position are highlighted, instead
           of just the selected item. The actual selection in the other series doesn't change.
           Multi-series selection is only supported for Q3DBars.
*/

/*!
    \enum QtDataVisualization::QDataVis::ShadowQuality

    Quality of shadows.

    \value ShadowQualityNone
           Shadows are disabled.
    \value ShadowQualityLow
           Shadows are rendered in low quality.
    \value ShadowQualityMedium
           Shadows are rendered in medium quality.
    \value ShadowQualityHigh
           Shadows are rendered in high quality.
    \value ShadowQualitySoftLow
           Shadows are rendered in low quality with softened edges.
    \value ShadowQualitySoftMedium
           Shadows are rendered in medium quality with softened edges.
    \value ShadowQualitySoftHigh
           Shadows are rendered in high quality with softened edges.
*/

/*!
    \enum QtDataVisualization::QDataVis::LabelStyle

    Label styles.

    \value LabelStyleOpaque
           Fully opaque background, using colors and borders from theme.
    \value LabelStyleFromTheme
           Use transparencies, colors and borders from theme.
    \value LabelStyleTransparent
           Fully transparent background, using text color from theme.
*/

/*!
    \enum QtDataVisualization::QDataVis::ColorStyle

    Color styles.

    \value ColorStyleUniform
           Objects are rendered in a single color.
    \value ColorStyleObjectGradient
           Objects are colored using a full gradient for each object regardless
           of object height.
    \value ColorStyleRangeGradient
           Objects are colored using a portion of the full gradient determined by
           the object's height and its position on the Y-axis.
*/
