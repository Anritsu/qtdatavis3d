import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable QtDataVisualization 1.0'

Module {
    Component {
        name: "QtDataVisualization::AbstractDeclarative"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["QtDataVisualization/AbstractGraph3D 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "SelectionFlag"
            values: {
                "SelectionNone": 0,
                "SelectionItem": 1,
                "SelectionRow": 2,
                "SelectionItemAndRow": 3,
                "SelectionColumn": 4,
                "SelectionItemAndColumn": 5,
                "SelectionRowAndColumn": 6,
                "SelectionItemRowAndColumn": 7,
                "SelectionSlice": 8,
                "SelectionMultiSeries": 16
            }
        }
        Enum {
            name: "SelectionFlags"
            values: {
                "SelectionNone": 0,
                "SelectionItem": 1,
                "SelectionRow": 2,
                "SelectionItemAndRow": 3,
                "SelectionColumn": 4,
                "SelectionItemAndColumn": 5,
                "SelectionRowAndColumn": 6,
                "SelectionItemRowAndColumn": 7,
                "SelectionSlice": 8,
                "SelectionMultiSeries": 16
            }
        }
        Enum {
            name: "ShadowQuality"
            values: {
                "ShadowQualityNone": 0,
                "ShadowQualityLow": 1,
                "ShadowQualityMedium": 2,
                "ShadowQualityHigh": 3,
                "ShadowQualitySoftLow": 4,
                "ShadowQualitySoftMedium": 5,
                "ShadowQualitySoftHigh": 6
            }
        }
        Enum {
            name: "RenderingMode"
            values: {
                "RenderDirectToBackground": 0,
                "RenderDirectToBackground_NoClear": 1,
                "RenderIndirect": 2
            }
        }
        Property { name: "selectionMode"; type: "SelectionFlags" }
        Property { name: "shadowQuality"; type: "ShadowQuality" }
        Property { name: "msaaSamples"; type: "int" }
        Property { name: "scene"; type: "Declarative3DScene"; isReadonly: true; isPointer: true }
        Property { name: "inputHandler"; type: "QAbstract3DInputHandler"; isPointer: true }
        Property { name: "theme"; type: "Q3DTheme"; isPointer: true }
        Property { name: "renderingMode"; type: "RenderingMode" }
        Signal {
            name: "selectionModeChanged"
            Parameter { name: "mode"; type: "SelectionFlags" }
        }
        Signal {
            name: "shadowQualityChanged"
            Parameter { name: "quality"; type: "ShadowQuality" }
        }
        Signal {
            name: "msaaSamplesChanged"
            Parameter { name: "samples"; type: "int" }
        }
        Signal {
            name: "sceneChanged"
            Parameter { name: "scene"; type: "Q3DScene"; isPointer: true }
        }
        Signal {
            name: "inputHandlerChanged"
            Parameter { name: "inputHandler"; type: "QAbstract3DInputHandler"; isPointer: true }
        }
        Signal {
            name: "themeChanged"
            Parameter { name: "theme"; type: "Q3DTheme"; isPointer: true }
        }
        Signal {
            name: "renderingModeChanged"
            Parameter { name: "mode"; type: "RenderingMode" }
        }
        Method {
            name: "handleAxisXChanged"
            Parameter { name: "axis"; type: "QAbstract3DAxis"; isPointer: true }
        }
        Method {
            name: "handleAxisYChanged"
            Parameter { name: "axis"; type: "QAbstract3DAxis"; isPointer: true }
        }
        Method {
            name: "handleAxisZChanged"
            Parameter { name: "axis"; type: "QAbstract3DAxis"; isPointer: true }
        }
        Method {
            name: "windowDestroyed"
            Parameter { name: "obj"; type: "QObject"; isPointer: true }
        }
        Method { name: "clearSelection" }
    }
    Component {
        name: "QtDataVisualization::ColorGradient"
        defaultProperty: "stops"
        prototype: "QObject"
        exports: ["QtDataVisualization/ColorGradient 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "stops"; type: "ColorGradientStop"; isList: true; isReadonly: true }
        Signal { name: "updated" }
    }
    Component {
        name: "QtDataVisualization::ColorGradientStop"
        prototype: "QObject"
        exports: ["QtDataVisualization/ColorGradientStop 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "position"; type: "double" }
        Property { name: "color"; type: "QColor" }
        Signal {
            name: "positionChanged"
            Parameter { name: "position"; type: "double" }
        }
        Signal {
            name: "colorChanged"
            Parameter { name: "color"; type: "QColor" }
        }
    }
    Component {
        name: "QtDataVisualization::Declarative3DScene"
        prototype: "QtDataVisualization::Q3DScene"
        exports: ["QtDataVisualization/Scene3D 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "selectionQueryPosition"; type: "QPointF" }
        Property { name: "invalidSelectionPoint"; type: "QPoint"; isReadonly: true }
        Signal {
            name: "selectionQueryPositionChanged"
            Parameter { name: "position"; type: "QPointF" }
        }
    }
    Component {
        name: "QtDataVisualization::DeclarativeBar3DSeries"
        defaultProperty: "seriesChildren"
        prototype: "QtDataVisualization::QBar3DSeries"
        exports: ["QtDataVisualization/Bar3DSeries 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "seriesChildren"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "selectedBar"; type: "QPointF" }
        Property { name: "invalidSelectionPosition"; type: "QPointF"; isReadonly: true }
        Property { name: "baseGradient"; type: "ColorGradient"; isPointer: true }
        Property { name: "singleHighlightGradient"; type: "ColorGradient"; isPointer: true }
        Property { name: "multiHighlightGradient"; type: "ColorGradient"; isPointer: true }
        Signal {
            name: "selectedBarChanged"
            Parameter { name: "position"; type: "QPointF" }
        }
        Signal {
            name: "baseGradientChanged"
            Parameter { name: "gradient"; type: "ColorGradient"; isPointer: true }
        }
        Signal {
            name: "singleHighlightGradientChanged"
            Parameter { name: "gradient"; type: "ColorGradient"; isPointer: true }
        }
        Signal {
            name: "multiHighlightGradientChanged"
            Parameter { name: "gradient"; type: "ColorGradient"; isPointer: true }
        }
        Method { name: "handleBaseGradientUpdate" }
        Method { name: "handleSingleHighlightGradientUpdate" }
        Method { name: "handleMultiHighlightGradientUpdate" }
    }
    Component {
        name: "QtDataVisualization::DeclarativeBars"
        defaultProperty: "seriesList"
        prototype: "QtDataVisualization::AbstractDeclarative"
        exports: ["QtDataVisualization/Bars3D 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "rowAxis"; type: "QCategory3DAxis"; isPointer: true }
        Property { name: "valueAxis"; type: "QValue3DAxis"; isPointer: true }
        Property { name: "columnAxis"; type: "QCategory3DAxis"; isPointer: true }
        Property { name: "multiSeriesUniform"; type: "bool" }
        Property { name: "barThickness"; type: "float" }
        Property { name: "barSpacing"; type: "QSizeF" }
        Property { name: "barSpacingRelative"; type: "bool" }
        Property { name: "seriesList"; type: "QBar3DSeries"; isList: true; isReadonly: true }
        Property { name: "selectedSeries"; type: "QBar3DSeries"; isReadonly: true; isPointer: true }
        Property { name: "primarySeries"; type: "QBar3DSeries"; isPointer: true }
        Signal {
            name: "rowAxisChanged"
            Parameter { name: "axis"; type: "QCategory3DAxis"; isPointer: true }
        }
        Signal {
            name: "valueAxisChanged"
            Parameter { name: "axis"; type: "QValue3DAxis"; isPointer: true }
        }
        Signal {
            name: "columnAxisChanged"
            Parameter { name: "axis"; type: "QCategory3DAxis"; isPointer: true }
        }
        Signal {
            name: "multiSeriesUniformChanged"
            Parameter { name: "uniform"; type: "bool" }
        }
        Signal {
            name: "barThicknessChanged"
            Parameter { name: "thicknessRatio"; type: "float" }
        }
        Signal {
            name: "barSpacingChanged"
            Parameter { name: "spacing"; type: "QSizeF" }
        }
        Signal {
            name: "barSpacingRelativeChanged"
            Parameter { name: "relative"; type: "bool" }
        }
        Signal {
            name: "meshFileNameChanged"
            Parameter { name: "filename"; type: "string" }
        }
        Signal {
            name: "primarySeriesChanged"
            Parameter { name: "series"; type: "QBar3DSeries"; isPointer: true }
        }
        Signal {
            name: "selectedSeriesChanged"
            Parameter { name: "series"; type: "QBar3DSeries"; isPointer: true }
        }
        Method {
            name: "handleAxisXChanged"
            Parameter { name: "axis"; type: "QAbstract3DAxis"; isPointer: true }
        }
        Method {
            name: "handleAxisYChanged"
            Parameter { name: "axis"; type: "QAbstract3DAxis"; isPointer: true }
        }
        Method {
            name: "handleAxisZChanged"
            Parameter { name: "axis"; type: "QAbstract3DAxis"; isPointer: true }
        }
        Method {
            name: "addSeries"
            Parameter { name: "series"; type: "QBar3DSeries"; isPointer: true }
        }
        Method {
            name: "removeSeries"
            Parameter { name: "series"; type: "QBar3DSeries"; isPointer: true }
        }
        Method {
            name: "insertSeries"
            Parameter { name: "index"; type: "int" }
            Parameter { name: "series"; type: "QBar3DSeries"; isPointer: true }
        }
    }
    Component {
        name: "QtDataVisualization::DeclarativeColor"
        prototype: "QObject"
        exports: ["QtDataVisualization/ThemeColor 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "color"; type: "QColor" }
        Signal {
            name: "colorChanged"
            Parameter { name: "color"; type: "QColor" }
        }
    }
    Component {
        name: "QtDataVisualization::DeclarativeScatter"
        defaultProperty: "seriesList"
        prototype: "QtDataVisualization::AbstractDeclarative"
        exports: ["QtDataVisualization/Scatter3D 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "axisX"; type: "QValue3DAxis"; isPointer: true }
        Property { name: "axisY"; type: "QValue3DAxis"; isPointer: true }
        Property { name: "axisZ"; type: "QValue3DAxis"; isPointer: true }
        Property { name: "selectedSeries"; type: "QScatter3DSeries"; isReadonly: true; isPointer: true }
        Property { name: "seriesList"; type: "QScatter3DSeries"; isList: true; isReadonly: true }
        Signal {
            name: "axisXChanged"
            Parameter { name: "axis"; type: "QValue3DAxis"; isPointer: true }
        }
        Signal {
            name: "axisYChanged"
            Parameter { name: "axis"; type: "QValue3DAxis"; isPointer: true }
        }
        Signal {
            name: "axisZChanged"
            Parameter { name: "axis"; type: "QValue3DAxis"; isPointer: true }
        }
        Signal {
            name: "selectedSeriesChanged"
            Parameter { name: "series"; type: "QScatter3DSeries"; isPointer: true }
        }
        Method {
            name: "handleAxisXChanged"
            Parameter { name: "axis"; type: "QAbstract3DAxis"; isPointer: true }
        }
        Method {
            name: "handleAxisYChanged"
            Parameter { name: "axis"; type: "QAbstract3DAxis"; isPointer: true }
        }
        Method {
            name: "handleAxisZChanged"
            Parameter { name: "axis"; type: "QAbstract3DAxis"; isPointer: true }
        }
        Method {
            name: "addSeries"
            Parameter { name: "series"; type: "QScatter3DSeries"; isPointer: true }
        }
        Method {
            name: "removeSeries"
            Parameter { name: "series"; type: "QScatter3DSeries"; isPointer: true }
        }
    }
    Component {
        name: "QtDataVisualization::DeclarativeScatter3DSeries"
        defaultProperty: "seriesChildren"
        prototype: "QtDataVisualization::QScatter3DSeries"
        exports: ["QtDataVisualization/Scatter3DSeries 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "seriesChildren"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "baseGradient"; type: "ColorGradient"; isPointer: true }
        Property { name: "singleHighlightGradient"; type: "ColorGradient"; isPointer: true }
        Property { name: "multiHighlightGradient"; type: "ColorGradient"; isPointer: true }
        Property { name: "invalidSelectionIndex"; type: "int"; isReadonly: true }
        Signal {
            name: "baseGradientChanged"
            Parameter { name: "gradient"; type: "ColorGradient"; isPointer: true }
        }
        Signal {
            name: "singleHighlightGradientChanged"
            Parameter { name: "gradient"; type: "ColorGradient"; isPointer: true }
        }
        Signal {
            name: "multiHighlightGradientChanged"
            Parameter { name: "gradient"; type: "ColorGradient"; isPointer: true }
        }
        Method { name: "handleBaseGradientUpdate" }
        Method { name: "handleSingleHighlightGradientUpdate" }
        Method { name: "handleMultiHighlightGradientUpdate" }
    }
    Component {
        name: "QtDataVisualization::DeclarativeSurface"
        defaultProperty: "seriesList"
        prototype: "QtDataVisualization::AbstractDeclarative"
        exports: ["QtDataVisualization/Surface3D 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "axisX"; type: "QValue3DAxis"; isPointer: true }
        Property { name: "axisY"; type: "QValue3DAxis"; isPointer: true }
        Property { name: "axisZ"; type: "QValue3DAxis"; isPointer: true }
        Property { name: "selectedSeries"; type: "QSurface3DSeries"; isReadonly: true; isPointer: true }
        Property { name: "seriesList"; type: "QSurface3DSeries"; isList: true; isReadonly: true }
        Signal {
            name: "axisXChanged"
            Parameter { name: "axis"; type: "QValue3DAxis"; isPointer: true }
        }
        Signal {
            name: "axisYChanged"
            Parameter { name: "axis"; type: "QValue3DAxis"; isPointer: true }
        }
        Signal {
            name: "axisZChanged"
            Parameter { name: "axis"; type: "QValue3DAxis"; isPointer: true }
        }
        Signal {
            name: "selectedSeriesChanged"
            Parameter { name: "series"; type: "QSurface3DSeries"; isPointer: true }
        }
        Method {
            name: "handleAxisXChanged"
            Parameter { name: "axis"; type: "QAbstract3DAxis"; isPointer: true }
        }
        Method {
            name: "handleAxisYChanged"
            Parameter { name: "axis"; type: "QAbstract3DAxis"; isPointer: true }
        }
        Method {
            name: "handleAxisZChanged"
            Parameter { name: "axis"; type: "QAbstract3DAxis"; isPointer: true }
        }
        Method {
            name: "addSeries"
            Parameter { name: "series"; type: "QSurface3DSeries"; isPointer: true }
        }
        Method {
            name: "removeSeries"
            Parameter { name: "series"; type: "QSurface3DSeries"; isPointer: true }
        }
    }
    Component {
        name: "QtDataVisualization::DeclarativeSurface3DSeries"
        defaultProperty: "seriesChildren"
        prototype: "QtDataVisualization::QSurface3DSeries"
        exports: ["QtDataVisualization/Surface3DSeries 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "seriesChildren"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "selectedPoint"; type: "QPointF" }
        Property { name: "invalidSelectionPosition"; type: "QPointF"; isReadonly: true }
        Property { name: "baseGradient"; type: "ColorGradient"; isPointer: true }
        Property { name: "singleHighlightGradient"; type: "ColorGradient"; isPointer: true }
        Property { name: "multiHighlightGradient"; type: "ColorGradient"; isPointer: true }
        Signal {
            name: "selectedPointChanged"
            Parameter { name: "position"; type: "QPointF" }
        }
        Signal {
            name: "baseGradientChanged"
            Parameter { name: "gradient"; type: "ColorGradient"; isPointer: true }
        }
        Signal {
            name: "singleHighlightGradientChanged"
            Parameter { name: "gradient"; type: "ColorGradient"; isPointer: true }
        }
        Signal {
            name: "multiHighlightGradientChanged"
            Parameter { name: "gradient"; type: "ColorGradient"; isPointer: true }
        }
        Method { name: "handleBaseGradientUpdate" }
        Method { name: "handleSingleHighlightGradientUpdate" }
        Method { name: "handleMultiHighlightGradientUpdate" }
    }
    Component {
        name: "QtDataVisualization::DeclarativeTheme3D"
        defaultProperty: "seriesChildren"
        prototype: "QtDataVisualization::Q3DTheme"
        exports: ["QtDataVisualization/Theme3D 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "seriesChildren"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "baseColors"; type: "DeclarativeColor"; isList: true; isReadonly: true }
        Property { name: "baseGradients"; type: "ColorGradient"; isList: true; isReadonly: true }
        Property { name: "singleHighlightGradient"; type: "ColorGradient"; isPointer: true }
        Property { name: "multiHighlightGradient"; type: "ColorGradient"; isPointer: true }
        Signal {
            name: "singleHighlightGradientChanged"
            Parameter { name: "gradient"; type: "ColorGradient"; isPointer: true }
        }
        Signal {
            name: "multiHighlightGradientChanged"
            Parameter { name: "gradient"; type: "ColorGradient"; isPointer: true }
        }
    }
    Component {
        name: "QtDataVisualization::Q3DCamera"
        prototype: "QtDataVisualization::Q3DObject"
        exports: ["QtDataVisualization/Camera3D 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "CameraPreset"
            values: {
                "CameraPresetNone": -1,
                "CameraPresetFrontLow": 0,
                "CameraPresetFront": 1,
                "CameraPresetFrontHigh": 2,
                "CameraPresetLeftLow": 3,
                "CameraPresetLeft": 4,
                "CameraPresetLeftHigh": 5,
                "CameraPresetRightLow": 6,
                "CameraPresetRight": 7,
                "CameraPresetRightHigh": 8,
                "CameraPresetBehindLow": 9,
                "CameraPresetBehind": 10,
                "CameraPresetBehindHigh": 11,
                "CameraPresetIsometricLeft": 12,
                "CameraPresetIsometricLeftHigh": 13,
                "CameraPresetIsometricRight": 14,
                "CameraPresetIsometricRightHigh": 15,
                "CameraPresetDirectlyAbove": 16,
                "CameraPresetDirectlyAboveCW45": 17,
                "CameraPresetDirectlyAboveCCW45": 18,
                "CameraPresetFrontBelow": 19,
                "CameraPresetLeftBelow": 20,
                "CameraPresetRightBelow": 21,
                "CameraPresetBehindBelow": 22,
                "CameraPresetDirectlyBelow": 23
            }
        }
        Property { name: "xRotation"; type: "float" }
        Property { name: "yRotation"; type: "float" }
        Property { name: "zoomLevel"; type: "int" }
        Property { name: "cameraPreset"; type: "CameraPreset" }
        Property { name: "wrapXRotation"; type: "bool" }
        Property { name: "wrapYRotation"; type: "bool" }
        Signal {
            name: "xRotationChanged"
            Parameter { name: "rotation"; type: "float" }
        }
        Signal {
            name: "yRotationChanged"
            Parameter { name: "rotation"; type: "float" }
        }
        Signal {
            name: "zoomLevelChanged"
            Parameter { name: "zoomLevel"; type: "int" }
        }
        Signal {
            name: "cameraPresetChanged"
            Parameter { name: "preset"; type: "CameraPreset" }
        }
        Signal {
            name: "wrapXRotationChanged"
            Parameter { name: "isEnabled"; type: "bool" }
        }
        Signal {
            name: "wrapYRotationChanged"
            Parameter { name: "isEnabled"; type: "bool" }
        }
    }
    Component {
        name: "QtDataVisualization::Q3DInputHandler"
        prototype: "QtDataVisualization::QAbstract3DInputHandler"
    }
    Component {
        name: "QtDataVisualization::Q3DLight"
        prototype: "QtDataVisualization::Q3DObject"
        exports: ["QtDataVisualization/Light3D 1.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QtDataVisualization::Q3DObject"
        prototype: "QObject"
        Property { name: "parentScene"; type: "Q3DScene"; isReadonly: true; isPointer: true }
        Property { name: "position"; type: "QVector3D" }
        Signal {
            name: "positionChanged"
            Parameter { name: "position"; type: "QVector3D" }
        }
    }
    Component {
        name: "QtDataVisualization::Q3DScene"
        prototype: "QObject"
        Property { name: "viewport"; type: "QRect"; isReadonly: true }
        Property { name: "primarySubViewport"; type: "QRect" }
        Property { name: "secondarySubViewport"; type: "QRect" }
        Property { name: "selectionQueryPosition"; type: "QPoint" }
        Property { name: "secondarySubviewOnTop"; type: "bool" }
        Property { name: "slicingActive"; type: "bool" }
        Property { name: "activeCamera"; type: "Q3DCamera"; isPointer: true }
        Property { name: "activeLight"; type: "Q3DLight"; isPointer: true }
        Property { name: "devicePixelRatio"; type: "float" }
        Signal {
            name: "viewportChanged"
            Parameter { name: "viewport"; type: "QRect" }
        }
        Signal {
            name: "primarySubViewportChanged"
            Parameter { name: "subViewport"; type: "QRect" }
        }
        Signal {
            name: "secondarySubViewportChanged"
            Parameter { name: "subViewport"; type: "QRect" }
        }
        Signal {
            name: "secondarySubviewOnTopChanged"
            Parameter { name: "isSecondaryOnTop"; type: "bool" }
        }
        Signal {
            name: "slicingActiveChanged"
            Parameter { name: "isSlicingActive"; type: "bool" }
        }
        Signal {
            name: "activeCameraChanged"
            Parameter { name: "camera"; type: "Q3DCamera"; isPointer: true }
        }
        Signal {
            name: "activeLightChanged"
            Parameter { name: "light"; type: "Q3DLight"; isPointer: true }
        }
        Signal {
            name: "devicePixelRatioChanged"
            Parameter { name: "pixelRatio"; type: "float" }
        }
        Signal {
            name: "selectionQueryPositionChanged"
            Parameter { name: "position"; type: "QPoint" }
        }
    }
    Component {
        name: "QtDataVisualization::Q3DTheme"
        prototype: "QObject"
        exports: ["QtDataVisualization/Q3DTheme 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ColorStyle"
            values: {
                "ColorStyleUniform": 0,
                "ColorStyleObjectGradient": 1,
                "ColorStyleRangeGradient": 2
            }
        }
        Enum {
            name: "Theme"
            values: {
                "ThemeQt": 0,
                "ThemePrimaryColors": 1,
                "ThemeDigia": 2,
                "ThemeStoneMoss": 3,
                "ThemeArmyBlue": 4,
                "ThemeRetro": 5,
                "ThemeEbony": 6,
                "ThemeIsabelle": 7,
                "ThemeUserDefined": 8
            }
        }
        Property { name: "type"; type: "Theme" }
        Property { name: "baseColors"; type: "QList<QColor>" }
        Property { name: "backgroundColor"; type: "QColor" }
        Property { name: "windowColor"; type: "QColor" }
        Property { name: "labelTextColor"; type: "QColor" }
        Property { name: "labelBackgroundColor"; type: "QColor" }
        Property { name: "gridLineColor"; type: "QColor" }
        Property { name: "singleHighlightColor"; type: "QColor" }
        Property { name: "multiHighlightColor"; type: "QColor" }
        Property { name: "lightColor"; type: "QColor" }
        Property { name: "baseGradients"; type: "QList<QLinearGradient>" }
        Property { name: "singleHighlightGradient"; type: "QLinearGradient" }
        Property { name: "multiHighlightGradient"; type: "QLinearGradient" }
        Property { name: "lightStrength"; type: "float" }
        Property { name: "ambientLightStrength"; type: "float" }
        Property { name: "highlightLightStrength"; type: "float" }
        Property { name: "labelBorderEnabled"; type: "bool" }
        Property { name: "font"; type: "QFont" }
        Property { name: "backgroundEnabled"; type: "bool" }
        Property { name: "gridEnabled"; type: "bool" }
        Property { name: "labelBackgroundEnabled"; type: "bool" }
        Property { name: "colorStyle"; type: "ColorStyle" }
        Signal {
            name: "typeChanged"
            Parameter { name: "themeType"; type: "Theme" }
        }
        Signal {
            name: "baseColorsChanged"
            Parameter { name: "colors"; type: "QList<QColor>" }
        }
        Signal {
            name: "backgroundColorChanged"
            Parameter { name: "color"; type: "QColor" }
        }
        Signal {
            name: "windowColorChanged"
            Parameter { name: "color"; type: "QColor" }
        }
        Signal {
            name: "labelTextColorChanged"
            Parameter { name: "color"; type: "QColor" }
        }
        Signal {
            name: "labelBackgroundColorChanged"
            Parameter { name: "color"; type: "QColor" }
        }
        Signal {
            name: "gridLineColorChanged"
            Parameter { name: "color"; type: "QColor" }
        }
        Signal {
            name: "singleHighlightColorChanged"
            Parameter { name: "color"; type: "QColor" }
        }
        Signal {
            name: "multiHighlightColorChanged"
            Parameter { name: "color"; type: "QColor" }
        }
        Signal {
            name: "lightColorChanged"
            Parameter { name: "color"; type: "QColor" }
        }
        Signal {
            name: "baseGradientsChanged"
            Parameter { name: "gradients"; type: "QList<QLinearGradient>" }
        }
        Signal {
            name: "singleHighlightGradientChanged"
            Parameter { name: "gradient"; type: "QLinearGradient" }
        }
        Signal {
            name: "multiHighlightGradientChanged"
            Parameter { name: "gradient"; type: "QLinearGradient" }
        }
        Signal {
            name: "lightStrengthChanged"
            Parameter { name: "strength"; type: "float" }
        }
        Signal {
            name: "ambientLightStrengthChanged"
            Parameter { name: "strength"; type: "float" }
        }
        Signal {
            name: "highlightLightStrengthChanged"
            Parameter { name: "strength"; type: "float" }
        }
        Signal {
            name: "labelBorderEnabledChanged"
            Parameter { name: "enabled"; type: "bool" }
        }
        Signal {
            name: "fontChanged"
            Parameter { name: "font"; type: "QFont" }
        }
        Signal {
            name: "backgroundEnabledChanged"
            Parameter { name: "enabled"; type: "bool" }
        }
        Signal {
            name: "gridEnabledChanged"
            Parameter { name: "enabled"; type: "bool" }
        }
        Signal {
            name: "labelBackgroundEnabledChanged"
            Parameter { name: "enabled"; type: "bool" }
        }
        Signal {
            name: "colorStyleChanged"
            Parameter { name: "style"; type: "ColorStyle" }
        }
    }
    Component {
        name: "QtDataVisualization::QAbstract3DAxis"
        prototype: "QObject"
        exports: ["QtDataVisualization/AbstractAxis3D 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "AxisOrientation"
            values: {
                "AxisOrientationNone": 0,
                "AxisOrientationX": 1,
                "AxisOrientationY": 2,
                "AxisOrientationZ": 4
            }
        }
        Enum {
            name: "AxisType"
            values: {
                "AxisTypeNone": 0,
                "AxisTypeCategory": 1,
                "AxisTypeValue": 2
            }
        }
        Property { name: "title"; type: "string" }
        Property { name: "labels"; type: "QStringList" }
        Property { name: "orientation"; type: "AxisOrientation"; isReadonly: true }
        Property { name: "type"; type: "AxisType"; isReadonly: true }
        Property { name: "min"; type: "float" }
        Property { name: "max"; type: "float" }
        Property { name: "autoAdjustRange"; type: "bool" }
        Signal {
            name: "titleChanged"
            Parameter { name: "newTitle"; type: "string" }
        }
        Signal {
            name: "orientationChanged"
            Parameter { name: "orientation"; type: "AxisOrientation" }
        }
        Signal {
            name: "minChanged"
            Parameter { name: "value"; type: "float" }
        }
        Signal {
            name: "maxChanged"
            Parameter { name: "value"; type: "float" }
        }
        Signal {
            name: "rangeChanged"
            Parameter { name: "min"; type: "float" }
            Parameter { name: "max"; type: "float" }
        }
        Signal {
            name: "autoAdjustRangeChanged"
            Parameter { name: "autoAdjust"; type: "bool" }
        }
    }
    Component {
        name: "QtDataVisualization::QAbstract3DInputHandler"
        prototype: "QObject"
        exports: ["QtDataVisualization/AbstractInputHandler3D 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "InputView"
            values: {
                "InputViewNone": 0,
                "InputViewOnPrimary": 1,
                "InputViewOnSecondary": 2
            }
        }
        Property { name: "inputView"; type: "InputView" }
        Property { name: "inputPosition"; type: "QPoint" }
        Property { name: "scene"; type: "Q3DScene"; isPointer: true }
        Signal {
            name: "positionChanged"
            Parameter { name: "position"; type: "QPoint" }
        }
        Signal {
            name: "inputViewChanged"
            Parameter { name: "view"; type: "InputView" }
        }
        Signal {
            name: "sceneChanged"
            Parameter { name: "scene"; type: "Q3DScene"; isPointer: true }
        }
    }
    Component {
        name: "QtDataVisualization::QAbstract3DSeries"
        prototype: "QObject"
        exports: ["QtDataVisualization/Abstract3DSeries 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "SeriesType"
            values: {
                "SeriesTypeNone": 0,
                "SeriesTypeBar": 1,
                "SeriesTypeScatter": 2,
                "SeriesTypeSurface": 4
            }
        }
        Enum {
            name: "Mesh"
            values: {
                "MeshUserDefined": 0,
                "MeshBar": 1,
                "MeshCube": 2,
                "MeshPyramid": 3,
                "MeshCone": 4,
                "MeshCylinder": 5,
                "MeshBevelBar": 6,
                "MeshBevelCube": 7,
                "MeshSphere": 8,
                "MeshMinimal": 9,
                "MeshArrow": 10,
                "MeshPoint": 11
            }
        }
        Property { name: "type"; type: "SeriesType"; isReadonly: true }
        Property { name: "itemLabelFormat"; type: "string" }
        Property { name: "visible"; type: "bool" }
        Property { name: "mesh"; type: "Mesh" }
        Property { name: "meshSmooth"; type: "bool" }
        Property { name: "meshRotation"; type: "QQuaternion" }
        Property { name: "userDefinedMesh"; type: "string" }
        Property { name: "colorStyle"; type: "QtDataVisualization::Q3DTheme::ColorStyle" }
        Property { name: "baseColor"; type: "QColor" }
        Property { name: "baseGradient"; type: "QLinearGradient" }
        Property { name: "singleHighlightColor"; type: "QColor" }
        Property { name: "singleHighlightGradient"; type: "QLinearGradient" }
        Property { name: "multiHighlightColor"; type: "QColor" }
        Property { name: "multiHighlightGradient"; type: "QLinearGradient" }
        Property { name: "name"; type: "string" }
        Signal {
            name: "itemLabelFormatChanged"
            Parameter { name: "format"; type: "string" }
        }
        Signal {
            name: "visibilityChanged"
            Parameter { name: "visible"; type: "bool" }
        }
        Signal {
            name: "meshChanged"
            Parameter { name: "mesh"; type: "Mesh" }
        }
        Signal {
            name: "meshSmoothChanged"
            Parameter { name: "enabled"; type: "bool" }
        }
        Signal {
            name: "meshRotationChanged"
            Parameter { name: "rotation"; type: "QQuaternion" }
        }
        Signal {
            name: "userDefinedMeshChanged"
            Parameter { name: "fileName"; type: "string" }
        }
        Signal {
            name: "colorStyleChanged"
            Parameter { name: "style"; type: "Q3DTheme::ColorStyle" }
        }
        Signal {
            name: "baseColorChanged"
            Parameter { name: "color"; type: "QColor" }
        }
        Signal {
            name: "baseGradientChanged"
            Parameter { name: "gradient"; type: "QLinearGradient" }
        }
        Signal {
            name: "singleHighlightColorChanged"
            Parameter { name: "color"; type: "QColor" }
        }
        Signal {
            name: "singleHighlightGradientChanged"
            Parameter { name: "gradient"; type: "QLinearGradient" }
        }
        Signal {
            name: "multiHighlightColorChanged"
            Parameter { name: "color"; type: "QColor" }
        }
        Signal {
            name: "multiHighlightGradientChanged"
            Parameter { name: "gradient"; type: "QLinearGradient" }
        }
        Signal {
            name: "nameChanged"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "setMeshAxisAndAngle"
            Parameter { name: "axis"; type: "QVector3D" }
            Parameter { name: "angle"; type: "float" }
        }
    }
    Component {
        name: "QtDataVisualization::QAbstractDataProxy"
        prototype: "QObject"
        exports: ["QtDataVisualization/AbstractDataProxy 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "DataType"
            values: {
                "DataTypeNone": 0,
                "DataTypeBar": 1,
                "DataTypeScatter": 2,
                "DataTypeSurface": 4
            }
        }
        Property { name: "type"; type: "DataType"; isReadonly: true }
    }
    Component {
        name: "QtDataVisualization::QBar3DSeries"
        prototype: "QtDataVisualization::QAbstract3DSeries"
        exports: ["QtDataVisualization/QBar3DSeries 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "dataProxy"; type: "QBarDataProxy"; isPointer: true }
        Property { name: "selectedBar"; type: "QPoint" }
        Property { name: "meshAngle"; type: "float" }
        Signal {
            name: "dataProxyChanged"
            Parameter { name: "proxy"; type: "QBarDataProxy"; isPointer: true }
        }
        Signal {
            name: "selectedBarChanged"
            Parameter { name: "position"; type: "QPoint" }
        }
        Signal {
            name: "meshAngleChanged"
            Parameter { name: "angle"; type: "float" }
        }
    }
    Component {
        name: "QtDataVisualization::QBarDataProxy"
        prototype: "QtDataVisualization::QAbstractDataProxy"
        exports: ["QtDataVisualization/BarDataProxy 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "rowCount"; type: "int"; isReadonly: true }
        Property { name: "rowLabels"; type: "QStringList" }
        Property { name: "columnLabels"; type: "QStringList" }
        Property { name: "series"; type: "QBar3DSeries"; isReadonly: true; isPointer: true }
        Signal { name: "arrayReset" }
        Signal {
            name: "rowsAdded"
            Parameter { name: "startIndex"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "rowsChanged"
            Parameter { name: "startIndex"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "rowsRemoved"
            Parameter { name: "startIndex"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "rowsInserted"
            Parameter { name: "startIndex"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "itemChanged"
            Parameter { name: "rowIndex"; type: "int" }
            Parameter { name: "columnIndex"; type: "int" }
        }
        Signal {
            name: "rowCountChanged"
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "seriesChanged"
            Parameter { name: "series"; type: "QBar3DSeries"; isPointer: true }
        }
    }
    Component {
        name: "QtDataVisualization::QCategory3DAxis"
        prototype: "QtDataVisualization::QAbstract3DAxis"
        exports: ["QtDataVisualization/CategoryAxis3D 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "labels"; type: "QStringList" }
    }
    Component {
        name: "QtDataVisualization::QHeightMapSurfaceDataProxy"
        prototype: "QtDataVisualization::QSurfaceDataProxy"
        exports: ["QtDataVisualization/HeightMapSurfaceDataProxy 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "heightMap"; type: "QImage" }
        Property { name: "heightMapFile"; type: "string" }
        Property { name: "minXValue"; type: "float" }
        Property { name: "maxXValue"; type: "float" }
        Property { name: "minZValue"; type: "float" }
        Property { name: "maxZValue"; type: "float" }
        Signal {
            name: "heightMapChanged"
            Parameter { name: "image"; type: "QImage" }
        }
        Signal {
            name: "heightMapFileChanged"
            Parameter { name: "filename"; type: "string" }
        }
        Signal {
            name: "minXValueChanged"
            Parameter { name: "value"; type: "float" }
        }
        Signal {
            name: "maxXValueChanged"
            Parameter { name: "value"; type: "float" }
        }
        Signal {
            name: "minZValueChanged"
            Parameter { name: "value"; type: "float" }
        }
        Signal {
            name: "maxZValueChanged"
            Parameter { name: "value"; type: "float" }
        }
    }
    Component {
        name: "QtDataVisualization::QItemModelBarDataProxy"
        prototype: "QtDataVisualization::QBarDataProxy"
        exports: ["QtDataVisualization/ItemModelBarDataProxy 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "itemModel"; type: "const QAbstractItemModel"; isPointer: true }
        Property { name: "rowRole"; type: "string" }
        Property { name: "columnRole"; type: "string" }
        Property { name: "valueRole"; type: "string" }
        Property { name: "rotationRole"; type: "string" }
        Property { name: "rowCategories"; type: "QStringList" }
        Property { name: "columnCategories"; type: "QStringList" }
        Property { name: "useModelCategories"; type: "bool" }
        Property { name: "autoRowCategories"; type: "bool" }
        Property { name: "autoColumnCategories"; type: "bool" }
        Signal {
            name: "itemModelChanged"
            Parameter { name: "itemModel"; type: "const QAbstractItemModel"; isPointer: true }
        }
        Signal {
            name: "rowRoleChanged"
            Parameter { name: "role"; type: "string" }
        }
        Signal {
            name: "columnRoleChanged"
            Parameter { name: "role"; type: "string" }
        }
        Signal {
            name: "valueRoleChanged"
            Parameter { name: "role"; type: "string" }
        }
        Signal {
            name: "rotationRoleChanged"
            Parameter { name: "role"; type: "string" }
        }
        Signal {
            name: "useModelCategoriesChanged"
            Parameter { name: "enable"; type: "bool" }
        }
        Signal {
            name: "autoRowCategoriesChanged"
            Parameter { name: "enable"; type: "bool" }
        }
        Signal {
            name: "autoColumnCategoriesChanged"
            Parameter { name: "enable"; type: "bool" }
        }
        Method {
            name: "rowCategoryIndex"
            type: "int"
            Parameter { name: "category"; type: "string" }
        }
        Method {
            name: "columnCategoryIndex"
            type: "int"
            Parameter { name: "category"; type: "string" }
        }
    }
    Component {
        name: "QtDataVisualization::QItemModelScatterDataProxy"
        prototype: "QtDataVisualization::QScatterDataProxy"
        exports: ["QtDataVisualization/ItemModelScatterDataProxy 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "itemModel"; type: "const QAbstractItemModel"; isPointer: true }
        Property { name: "xPosRole"; type: "string" }
        Property { name: "yPosRole"; type: "string" }
        Property { name: "zPosRole"; type: "string" }
        Property { name: "rotationRole"; type: "string" }
        Signal {
            name: "itemModelChanged"
            Parameter { name: "itemModel"; type: "const QAbstractItemModel"; isPointer: true }
        }
        Signal {
            name: "xPosRoleChanged"
            Parameter { name: "role"; type: "string" }
        }
        Signal {
            name: "yPosRoleChanged"
            Parameter { name: "role"; type: "string" }
        }
        Signal {
            name: "zPosRoleChanged"
            Parameter { name: "role"; type: "string" }
        }
        Signal {
            name: "rotationRoleChanged"
            Parameter { name: "role"; type: "string" }
        }
    }
    Component {
        name: "QtDataVisualization::QItemModelSurfaceDataProxy"
        prototype: "QtDataVisualization::QSurfaceDataProxy"
        exports: ["QtDataVisualization/ItemModelSurfaceDataProxy 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "itemModel"; type: "const QAbstractItemModel"; isPointer: true }
        Property { name: "rowRole"; type: "string" }
        Property { name: "columnRole"; type: "string" }
        Property { name: "xPosRole"; type: "string" }
        Property { name: "yPosRole"; type: "string" }
        Property { name: "zPosRole"; type: "string" }
        Property { name: "rowCategories"; type: "QStringList" }
        Property { name: "columnCategories"; type: "QStringList" }
        Property { name: "useModelCategories"; type: "bool" }
        Property { name: "autoRowCategories"; type: "bool" }
        Property { name: "autoColumnCategories"; type: "bool" }
        Signal {
            name: "itemModelChanged"
            Parameter { name: "itemModel"; type: "const QAbstractItemModel"; isPointer: true }
        }
        Signal {
            name: "rowRoleChanged"
            Parameter { name: "role"; type: "string" }
        }
        Signal {
            name: "columnRoleChanged"
            Parameter { name: "role"; type: "string" }
        }
        Signal {
            name: "xPosRoleChanged"
            Parameter { name: "role"; type: "string" }
        }
        Signal {
            name: "yPosRoleChanged"
            Parameter { name: "role"; type: "string" }
        }
        Signal {
            name: "zPosRoleChanged"
            Parameter { name: "role"; type: "string" }
        }
        Signal {
            name: "useModelCategoriesChanged"
            Parameter { name: "enable"; type: "bool" }
        }
        Signal {
            name: "autoRowCategoriesChanged"
            Parameter { name: "enable"; type: "bool" }
        }
        Signal {
            name: "autoColumnCategoriesChanged"
            Parameter { name: "enable"; type: "bool" }
        }
        Method {
            name: "rowCategoryIndex"
            type: "int"
            Parameter { name: "category"; type: "string" }
        }
        Method {
            name: "columnCategoryIndex"
            type: "int"
            Parameter { name: "category"; type: "string" }
        }
    }
    Component {
        name: "QtDataVisualization::QScatter3DSeries"
        prototype: "QtDataVisualization::QAbstract3DSeries"
        exports: ["QtDataVisualization/QScatter3DSeries 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "dataProxy"; type: "QScatterDataProxy"; isPointer: true }
        Property { name: "selectedItem"; type: "int" }
        Property { name: "itemSize"; type: "float" }
        Signal {
            name: "dataProxyChanged"
            Parameter { name: "proxy"; type: "QScatterDataProxy"; isPointer: true }
        }
        Signal {
            name: "selectedItemChanged"
            Parameter { name: "index"; type: "int" }
        }
        Signal {
            name: "itemSizeChanged"
            Parameter { name: "size"; type: "float" }
        }
    }
    Component {
        name: "QtDataVisualization::QScatterDataProxy"
        prototype: "QtDataVisualization::QAbstractDataProxy"
        exports: ["QtDataVisualization/ScatterDataProxy 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "itemCount"; type: "int"; isReadonly: true }
        Property { name: "series"; type: "QScatter3DSeries"; isReadonly: true; isPointer: true }
        Signal { name: "arrayReset" }
        Signal {
            name: "itemsAdded"
            Parameter { name: "startIndex"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "itemsChanged"
            Parameter { name: "startIndex"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "itemsRemoved"
            Parameter { name: "startIndex"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "itemsInserted"
            Parameter { name: "startIndex"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "itemCountChanged"
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "seriesChanged"
            Parameter { name: "series"; type: "QScatter3DSeries"; isPointer: true }
        }
    }
    Component {
        name: "QtDataVisualization::QSurface3DSeries"
        prototype: "QtDataVisualization::QAbstract3DSeries"
        exports: ["QtDataVisualization/QSurface3DSeries 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "DrawFlag"
            values: {
                "DrawWireframe": 1,
                "DrawSurface": 2,
                "DrawSurfaceAndWireframe": 3
            }
        }
        Enum {
            name: "DrawFlags"
            values: {
                "DrawWireframe": 1,
                "DrawSurface": 2,
                "DrawSurfaceAndWireframe": 3
            }
        }
        Property { name: "dataProxy"; type: "QSurfaceDataProxy"; isPointer: true }
        Property { name: "selectedPoint"; type: "QPoint" }
        Property { name: "flatShadingEnabled"; type: "bool" }
        Property { name: "flatShadingSupported"; type: "bool"; isReadonly: true }
        Property { name: "drawMode"; type: "DrawFlags" }
        Signal {
            name: "dataProxyChanged"
            Parameter { name: "proxy"; type: "QSurfaceDataProxy"; isPointer: true }
        }
        Signal {
            name: "selectedPointChanged"
            Parameter { name: "position"; type: "QPoint" }
        }
        Signal {
            name: "flatShadingEnabledChanged"
            Parameter { name: "enable"; type: "bool" }
        }
        Signal {
            name: "flatShadingSupportedChanged"
            Parameter { name: "enable"; type: "bool" }
        }
        Signal {
            name: "drawModeChanged"
            Parameter { name: "mode"; type: "QSurface3DSeries::DrawFlags" }
        }
    }
    Component {
        name: "QtDataVisualization::QSurfaceDataProxy"
        prototype: "QtDataVisualization::QAbstractDataProxy"
        exports: ["QtDataVisualization/SurfaceDataProxy 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "rowCount"; type: "int"; isReadonly: true }
        Property { name: "columnCount"; type: "int"; isReadonly: true }
        Property { name: "series"; type: "QSurface3DSeries"; isReadonly: true; isPointer: true }
        Signal { name: "arrayReset" }
        Signal {
            name: "rowsAdded"
            Parameter { name: "startIndex"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "rowsChanged"
            Parameter { name: "startIndex"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "rowsRemoved"
            Parameter { name: "startIndex"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "rowsInserted"
            Parameter { name: "startIndex"; type: "int" }
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "itemChanged"
            Parameter { name: "rowIndex"; type: "int" }
            Parameter { name: "columnIndex"; type: "int" }
        }
        Signal {
            name: "rowCountChanged"
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "columnCountChanged"
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "seriesChanged"
            Parameter { name: "series"; type: "QSurface3DSeries"; isPointer: true }
        }
    }
    Component {
        name: "QtDataVisualization::QTouch3DInputHandler"
        prototype: "QtDataVisualization::Q3DInputHandler"
    }
    Component {
        name: "QtDataVisualization::QValue3DAxis"
        prototype: "QtDataVisualization::QAbstract3DAxis"
        exports: ["QtDataVisualization/ValueAxis3D 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "segmentCount"; type: "int" }
        Property { name: "subSegmentCount"; type: "int" }
        Property { name: "labelFormat"; type: "string" }
        Signal {
            name: "segmentCountChanged"
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "subSegmentCountChanged"
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "labelFormatChanged"
            Parameter { name: "format"; type: "string" }
        }
    }
}
